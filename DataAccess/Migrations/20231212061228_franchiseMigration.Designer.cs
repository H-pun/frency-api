// <auto-generated />
using System;
using Frency.DataAccess;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Frency.DataAccess.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20231212061228_franchiseMigration")]
    partial class franchiseMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.16")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Frency.DataAccess.Entities.Franchise", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<string>("Address")
                        .HasColumnType("text")
                        .HasColumnName("address");

                    b.Property<string>("Category")
                        .HasColumnType("text")
                        .HasColumnName("category");

                    b.Property<string>("Description")
                        .HasColumnType("text")
                        .HasColumnName("description");

                    b.Property<string>("FilePath")
                        .HasColumnType("text")
                        .HasColumnName("file_path");

                    b.Property<string>("Name")
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.Property<string>("WhatsappNumber")
                        .HasColumnType("text")
                        .HasColumnName("whatsapp_number");

                    b.HasKey("Id")
                        .HasName("pk_franchise");

                    b.ToTable("franchise", (string)null);
                });

            modelBuilder.Entity("Frency.DataAccess.Entities.FranchiseBundle", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<string>("Facility")
                        .HasColumnType("text")
                        .HasColumnName("facility");

                    b.Property<string>("FranchiseType")
                        .HasColumnType("text")
                        .HasColumnName("franchise_type");

                    b.Property<Guid>("IdFranchise")
                        .HasColumnType("uuid")
                        .HasColumnName("id_franchise");

                    b.Property<float>("Price")
                        .HasColumnType("real")
                        .HasColumnName("price");

                    b.HasKey("Id")
                        .HasName("pk_franchise_bundle");

                    b.HasIndex("IdFranchise")
                        .HasDatabaseName("ix_franchise_bundle_id_franchise");

                    b.ToTable("franchise_bundle", (string)null);
                });

            modelBuilder.Entity("Frency.DataAccess.Entities.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<string>("AppToken")
                        .HasColumnType("text")
                        .HasColumnName("app_token");

                    b.Property<string>("Email")
                        .HasColumnType("text")
                        .HasColumnName("email");

                    b.Property<string>("Name")
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.Property<string>("Password")
                        .HasColumnType("text")
                        .HasColumnName("password");

                    b.Property<string>("Role")
                        .HasColumnType("text")
                        .HasColumnName("role");

                    b.Property<string>("Username")
                        .HasColumnType("text")
                        .HasColumnName("username");

                    b.HasKey("Id")
                        .HasName("pk_user");

                    b.ToTable("user", (string)null);
                });

            modelBuilder.Entity("Frency.DataAccess.Entities.FranchiseBundle", b =>
                {
                    b.HasOne("Frency.DataAccess.Entities.Franchise", "Franchise")
                        .WithMany("Bundle")
                        .HasForeignKey("IdFranchise")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_franchise_bundle_franchise_id_franchise");

                    b.Navigation("Franchise");
                });

            modelBuilder.Entity("Frency.DataAccess.Entities.Franchise", b =>
                {
                    b.Navigation("Bundle");
                });
#pragma warning restore 612, 618
        }
    }
}
